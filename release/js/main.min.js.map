{"version":3,"file":"main.min.js","sources":["main.min.js"],"sourcesContent":["'use strict';\r\n\r\n// Number-picker для кол-во элементов(продуктов в интернет магазине)\r\n/*----------------------------\r\nSTART COMPONENT picker-number( Cart Plus Minus Button )\r\n------------------------------ */\r\n\r\n(function(){\r\n\t/*\r\n\t\t- picker-number кол-во элемента с кнопками + и -\r\n\t\t- проверка если nextVal == 0, то result(input.value) = 0\r\n\t\t- создание и вызов события change ( для ModX компонента)\r\n\t*/\r\n\tconst numberPickers = document.querySelectorAll(\".picker-number\");\r\n\r\n\tnumberPickers.forEach(function(item, index) {\r\n\t\tconst buttons = item.querySelectorAll(\".picker-number__button\");\r\n\r\n\t\t// Событие на изменение значений\r\n\t\t// с помощью кнопок\r\n\t\tbuttons.forEach(function(el) {\r\n\t\t\tel.addEventListener(\"click\", function () {\r\n\t\t\t\tconst target = this.parentNode.querySelector(\".picker-number__input\");\r\n\t\t\t\tconst oldValue = target.value;\r\n\t\t\t\tlet newValue;\r\n\t\t\t\tconst maxValue = parseInt( target.getAttribute(\"max\") );\r\n\r\n\t\t\t\tif ( this.classList.contains(\"picker-number__button_inc\") ) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ( maxValue ) {\r\n\t\t\t\t\t\tif (oldValue < maxValue) {\r\n\t\t\t\t\t\t\tnewValue = parseInt( oldValue ) + 1;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnewValue = maxValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewValue = parseInt( oldValue ) + 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} \r\n\t\t\t\telse if ( this.classList.contains(\"picker-number__button_dec\") ) {\t\t\r\n\r\n\t\t\t\t\tif (oldValue > 0) {\r\n\t\t\t\t\t\tnewValue = parseInt( oldValue ) - 1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewValue = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttarget.value = newValue;\r\n\r\n\t\t\t\tconst event = new Event('change');\r\n\t\t\t\ttarget.dispatchEvent(event);\r\n\t\t\t});\r\n\r\n\t\t});\r\n\r\n\t});\r\n\r\n\t// Событие на изменение значений\r\n\t// ввода в input(с помощью клавиатуры)\r\n\tnumberPickers.forEach(function(item) {\r\n\t\t\r\n\t\titem.querySelector(\".picker-number__input\").addEventListener(\"input\", function (e) {\r\n\r\n\t\t\tconst minValue = parseInt( this.getAttribute(\"min\") );\r\n\t\t\tconst maxValue = parseInt( this.getAttribute(\"max\") );\r\n\r\n\t\t\tthis.value = parseInt(this.value)\r\n\r\n\t\t\tif (maxValue) {\r\n\r\n\t\t\t\tif ( this.value >= maxValue) {\r\n\t\t\t\t\tthis.value = maxValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t});\r\n\r\n})();\r\n\r\n\r\n/*----------------------------\r\nEND COMPONENT picker-number( Cart Plus Minus Button )\r\n------------------------------ */"],"names":["numberPickers","document","querySelectorAll","forEach","item","index","buttons","el","addEventListener","target","this","parentNode","querySelector","oldValue","value","newValue","maxValue","parseInt","getAttribute","classList","contains","event","Event","dispatchEvent","e"],"mappings":"cAOA,WAMC,MAAMA,EAAgBC,SAASC,iBAAiB,kBAEhDF,EAAcG,QAAQ,SAASC,EAAMC,GACpC,MAAMC,EAAUF,EAAKF,iBAAiB,0BAItCI,EAAQH,QAAQ,SAASI,GACxBA,EAAGC,iBAAiB,QAAS,WAC5B,MAAMC,EAASC,KAAKC,WAAWC,cAAc,yBAC7C,IAAMC,EAAWJ,EAAOK,MACxB,IAAIC,EACJ,IAAMC,EAAWC,SAAUR,EAAOS,aAAa,QAE1CR,KAAKS,UAAUC,SAAS,6BAI1BL,GAFGC,GACAH,EAAWG,EAMJC,SAAUJ,GAAa,EAHtBG,EAOJN,KAAKS,UAAUC,SAAS,+BAGhCL,EADc,EAAXF,EACQI,SAAUJ,GAAa,EAEvB,GAKbJ,EAAOK,MAAQC,EAETM,EAAQ,IAAIC,MAAM,UACxBb,EAAOc,cAAcF,SASxBrB,EAAcG,QAAQ,SAASC,GAE9BA,EAAKQ,cAAc,yBAAyBJ,iBAAiB,QAAS,SAAUgB,GAE9DP,SAAUP,KAAKQ,aAAa,QAA7C,IACMF,EAAWC,SAAUP,KAAKQ,aAAa,QAE7CR,KAAKI,MAAQG,SAASP,KAAKI,OAEvBE,GAEEN,KAAKI,OAASE,IAClBN,KAAKI,MAAQE,OAnElB"}